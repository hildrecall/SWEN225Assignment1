import java.awt.Graphics;
import java.awt.event.MouseEvent;

import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JTextArea;
import javax.swing.JMenuBar;
import javax.swing.JMenu;
import javax.swing.JMenuItem;
import java.awt.BorderLayout;
import java.awt.Dimension;

import javax.swing.JButton;
import javax.swing.SwingConstants;

import GUI.Move;

import java.awt.GridLayout;
import javax.swing.JToolBar;
import java.awt.event.ActionListener;
import java.awt.event.ActionEvent;
import javax.swing.JSplitPane;
import java.awt.Insets;
import javax.swing.JTextPane;
import javax.swing.ImageIcon;

/**
 * This class will create the GUI and moniter the actions of the user(s). As an
 * abstract class it will be extended by our game, and the gameplay functions
 * will all be within game.
 *
 * @author hildrecall and rehanmidh
 *
 */
public class GUI extends JFrame {
    Game game;

	public enum Move {
		NORTH, SOUTH, EAST, WEST
	};

	public GUI() {
		game = new Game();


		//creating the GUI
		JFrame frame = new JFrame();
		JPanel controls = new JPanel();

		JButton suggestion = new JButton("Suggestion");
		JButton accusation = new JButton("Accusation");

		JTextPane playertitle = new JTextPane();
		playertitle.setText("Player Number");
		JTextArea playernumber = new JTextArea();
		JTextPane movetitle = new JTextPane();
		movetitle.setText("Available Moves");
		JTextArea movenumber = new JTextArea();
		movenumber.setText("0");

		JPanel playerinfo = new JPanel();
		playerinfo.setMaximumSize(new Dimension(100, 60));
		playerinfo.setLayout(new GridLayout(4,1));
		playerinfo.add(playertitle);
		playerinfo.add(playernumber);
		playerinfo.add(movetitle);
		playerinfo.add(movenumber);

		JPanel actions = new JPanel();
		actions.setMaximumSize(new Dimension(100, 60));
		actions.setLayout(new GridLayout(2,1));
		actions.add(suggestion);
		actions.add(accusation);

		JButton north = new JButton("\u2191");
		north.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent ev) {
				game.movePlayer(game.currentplayer, "North");
				game.redraw();
			}
		});
		JButton south = new JButton("\u2193");
		south.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent ev) {
				game.movePlayer(game.currentplayer, "North");
				game.redraw();
			}
		});
		JButton east = new JButton("\u2192");
		east.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent ev) {
				game.movePlayer(game.currentplayer, "North");
				game.redraw();
			}
		});
		JButton west = new JButton("\u2190");
		west.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent ev) {
				game.movePlayer(game.currentplayer, "North");
				game.redraw();
			}
		});
		JButton dice = new JButton("Dice");
		west.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent ev) {
				game.diceRoll(game.currentplayer);
				game.redraw();
			}
		});
		dice.setIcon(new ImageIcon("dice.png"));
		JButton topright = new JButton("");
		topright.setIcon(new ImageIcon("hat.png"));
		topright.setEnabled(false);
		north.setPreferredSize(new Dimension(60, 60));
		south.setPreferredSize(new Dimension(60, 60));
		east.setPreferredSize(new Dimension(60, 60));
		west.setPreferredSize(new Dimension(60, 60));
		dice.setPreferredSize(new Dimension(60, 60));
		topright.setPreferredSize(new Dimension(60, 60));

        JPanel directions = new JPanel();
		directions.setMaximumSize(new Dimension(120, 90));
		directions.setLayout(new GridLayout(2, 3));
		directions.add(dice);
		directions.add(north);
		directions.add(topright);
		directions.add(west);
		directions.add(south);
		directions.add(east);
		controls.setLayout(new GridLayout(0, 3, 0, 0));

		controls.add(playerinfo);
		controls.add(directions);
		controls.add(actions);
		frame.getContentPane().add(controls, BorderLayout.NORTH);

		JSplitPane splitPane = new JSplitPane();
		frame.getContentPane().add(splitPane, BorderLayout.SOUTH);

        JPanel rpanel = new JPanel();
		splitPane.setRightComponent(rpanel);

		JPanel lpanel = new JPanel();
		splitPane.setLeftComponent(lpanel);
		splitPane.setDividerLocation(225);

		JPanel drawing = new JPanel();
		frame.getContentPane().add(drawing, BorderLayout.CENTER);

        JMenuBar menuBar = new JMenuBar();
        frame.setJMenuBar(menuBar);

        JMenu menu = new JMenu("Menu");
        menuBar.add(menu);
        JMenuItem startgame = new JMenuItem("Start Game");
        menu.add(startgame);
        JMenuItem endgame = new JMenuItem("End Game");
        menu.add(endgame);
        JMenuItem endturn = new JMenuItem("End Turn");
        menu.add(endturn);
        frame.setVisible(true);
	}

	public static void main(String[] args) {
		new GUI();
	}
}
